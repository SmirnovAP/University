8 лабораторных начиная с октября. Сдавать можно также, когда у Рудакова первый курс.
ЛР№1: "Исследование псевдослучайных чисел".
Таблица, генерируется табличным и алгоритмическим способом последовательность псевдослучайных чисел. Числа: 1разрядные (0-9), 2разрядные (10-99), 3разрядные (100-999)
	1разр	2разр	3разр
	|	|	|	|	|	|
Под каждой из колонок - количественный критерий, который показывает, который из способов является лучшим. Критерий обосновать в отчете.
Табличный способ: использовать таблицу случайных чисел by математики.
На форме - возможность ввода последовательности чисел, также оцениваемой по критерию.

ЛР№2: "Изучение функции и плотности распределения заданной случайной величины"
1. равномерный поток (распределение), построить функцию и плотность; знать аналитическое выражение равномерности
2. по вариантам, распределение пуассона (первые номера группы) или гауссово (2-е номера), нормальное, эрланга.
Генератор случайных чисел, работающий по нужному распределению; сравнить с теоретическим

Моделирование бауманской: прибытие поездов, выгрузка пассажиров, моделирование с тремя\четыремя эскалаторами, с учетом тяжести дверей. Выбор оптимального потока


07.09.15 -------------------------------------------------------------

"Имитационное моделирование" 3 издание Лоу Кейтон (?)
"Имитационное моделирование систем" (РК9) Емельянов, Веселовский
Шрайдер "Моделирование на GPSS"
Советов, Яковлев "Моделирование систем" (МЭИ)
Бусленко "Моделирование сложных систем"


	Общие вопросы теории моделирования.
Философские аспекты моделирования.
Моделирование позволяет: 1) сэкономить время и ресурсы 2) предсказать то, чего ещё нет
Объект - всё то, на что направлена человеческая деятельность. При определении объекта необходимо разобраться с "составом" объекта и его взаимодействием с "внешним миром".
Научно-техническое развитие в любой области обычно идёт по следующему пути:
	* наблюдение и эксперимент
	* теоретическое исследование
	* организация производства
Большую роль играют гипотезы - определенные предсказания и предположения, основывающиеся на небольшом количестве опытных данных. Также используются наблюдения идогадки. При формировании и проверки правильности гипотез большое значение в качестве метода суждения имеет аналогия.
Аналогия - суждение о частном сходстве между двумя объектами. Современная научная гипотеза создаётся как правило по аналогии с проверенными на практике положениями. //гипотеза -> аналогия -> эксперимент - аналогия связывает гипотезу и эксперимент.
Гипотезы и аналогии, отражающие реальный объективно существующий мир, должны обладать наглядностью или сводиться к удобным для исследования логическим схемам.
Такие логические схемы, упрощающие рассуждения и логические построения (либо позволяющие проводить эксперименты, уточняющие природу явлений), называются моделями. Модель - заместитель объекта-оригинала, обеспечивающий исследование некоторых его свойств. Замещение одного объекта другим с целью получения информации о важнейших свойствах объекта-оригинала с помощью объекта-модели называется моделированием.



14.09.15 -------------------------------------------------------------

Гносеология моделирования - показываются методы, с помощью которых мы познаём объект. Самое главное - понятие эксперимента. Только проведя группу экспериментов можно говорить что модель отображает тот или иной аспект реального объекта.

Классификация методов моделирования.
Моделирование систем:
													
    полное            неполное            приближенное
        +-----------------------------------+
    детерминированное                   стохастическое
        |                                    |
    статиическое                        динамическое
        +---------------+-------------------+
    дискретное        дискр-непр.            непрерывное
        |                                    |
    мысленное                            реальное------------натурное, физическое
    наглядное    символическое            математическое

Наглядное: гипотетическое, аналоговое, макетирование.
Символическое: языковое, знаковое
Математическое: аналитическое, имитационное, комбинированное, информационное, структурное, ситуационное
Натурное: научный эксперимент, комплексные испытания, производственный эксперимент
Физическое: в реальном времени, в модельном времени

Основу классификации составляют критерии. В дальнейшем будем заниматься имитационным моделированием.
Классификация видов моделирования может быть проведена по характеру моделируемых объектов, сферам приложения, глубине моделирования.
По глубине методы делятся на две группы: материальное и идеальное.
	Материальное - основывается на материальной аналогии объекта и модели. Оно осуществляется с помощью воспроизведения основных физических, функциональных или геометрических характеристик изучаемого объекта. Частный случай - физическое моделирование, а его частный случай - аналоговое (на основе явлений, описываемых одинаковыми математическими соотношениями).
	Идеальное - основывается на мысленной аналогии. Разбивается на два подкласса: знаковое (формализованное) и интуитивное (неформализованное). При знаковом моделью являются формулы, чертежи; важнейшая форма - математическое.
В зависимости от типа носителя и сигнатуры модели различаются:
	детерминированные - отображает процессы, в которых предполагается отсутствие случайных воздействий.
	стохастическое - учитывает _вероятностные_ процессы и события.
	статическое - служит для описания состояния объекта в фиксированный момент времени.
	динамическое - для исследования объекта во времени. При этом оперируют аналоговыми (непрерывными), дискретными и смешанными моделями.
В зависимости от формы реализации носителя моделирование делится:
	мысленное - модели не реализуемы в заданном интервале времени, либо отсутствуют условия для их физического создания. Такое моделирование реализуется в виде наглядного, символического и математического.
	реальное

В основу гипотетического моделирования закладывается гипотеза о закономерностях функционирования реального объекта. Базируется на причинно-следственной связи между входом и выходом.
Макетирование применяется, когда процессы в реальном объекте не поддаются физическому моделированию.
Символическое моделирование представляет собой искусственный процесс создания логического объекта, который замещает реальный и выражает его основные свойства с помощью определенных знаков и символов. Знак - условное обозначение отдельного понятия.
Математическое моделирование - процесс установления в соответствие данному реальному объекту некоторого математического объекта, который и называется математической моделью.

При создании модели реального объекта и осуществлении процесса исследования необходимо провести формализацию (определение математических схем) процесса функционирования. Для представления математических моделей могут использоваться различные формы записи, основными из которых являются: 
	инвариантная, запись соотношений модели с помощью традиционного математического языка, безотносительно к методу решений уравнений. Модель может быть представлена как совокупность входов, выходов, переменных состояния и глобальных уравнений системы.
	алгоритмическая, 
	схемная, 
	аналитическая, запись модели в виде результата решения исходных уравнений модели. Обычно модели в аналитической форме представляют собой _явные_ выражения выходных параметров как функций входов и переменных состояния.
Для аналитического моделирования характерно, что в основном моделируется только функциональный аспект системы. При этом глобальные уравнения системы, описывающие закон её функционирования, записываются в виде некоторых аналитических соотношений: алгебраические, интегро-дифференциальные, конечно-разностные и т.д., а также логические условия.
Аналитическая модель исследуется несколькими методами:
	аналитический - стремятся получить в общем виде явные зависимости, связывающие искомые характеристики с начальными условиями, параметрами и переменными состояния системы.
	численный - для конкретных начальных данных.
	качественный - ничего не можем решить, но можем найти некоторые свойства решения (например устойчивость).

Распространены компьютерные методы исследования сложных систем. Строится алгоритм функционирования сложного объекта, а затем среди класса алгоритмических моделей выделяется класс имитационных моделей.
*** При имитационном моделировании воспроизводится алгоритм функционирования системы во времени, причем имитируются элементарные явления, составляющие процесс с сохранением их в логические структуры и последовательности протекания. Это позволяет по исходным данным получить сведения о состоянии процесса в определенные моменты времени, дающие возможность оценить характеристику системы.
Основное преимущество имитационного моделирования (по сравнению с аналитическим) - возможность решения более сложных задач: достаточно "просто" учитывать такие факторы, как наличие дискретных и непрерывных элементов, нелинейные характеристики этих элементов, многочисленные случайные воздействия.

При изучении объекта "лучшесть" модели выражается в точности; следовательно аналитические модели лучше - математические схемы проверены и работают. Имитация - попытка (жалкая) построить копию; всегда возникает большая погрешность. Часто такая ошибка настолько завуалирована, что тяжело оценить конечный результат. Основной закон использования имитационной модели - многократные эксперименты и статистический анализ результатов.


Типы имитационного моделирования.
	1. Агентное.
Используется для исследования децентрализованных систем, динамика функционирования которых определяется не глобальными правилами и законами, а когда эти самые правила и законы являются результатом индивидуальной активности членов группы. Цель агентных моделей - получить представление об этих глобальных правилах и общем поведении системы, исходя из предположений об индивидуальном частном поведении её отдельных (активных) объектов и их взаимодействии в системе. Используется, если удаётся выделить индивидуальные свойства и правила поведения; прямое или косвенное взаимодействие.
Под агентом понимают некую сущность, обладающую активностью, автономным поведением, которая может принимать решения в соответствии с некоторым набором правил. Главное - агент может самостоятельно изменяться.
	2. Дискретно-событийное.
(разработано в 60-х) Предлагается абстрагироваться от непрерывной природы событий и рассматривать только основные события моделируемой системы. Пример на аэропорте: обработка заказов, регистрация, загрузка-разгрузка, ожидание и т.п.. ДС моделирование наиболее развито и имеет приложение от логистики и массового обслуживания до транспортных и производственных систем. В качестве квази-объектов выступают "заявки", ресурсы, процессы.
	3. Системная динамика.
Для исследуемой системы строятся графические диаграммы причинных связей и глобальных влияний одних параметров на другие во времени. Затем созданная модель имитируется на компьютере. Бизнес-процессы, когнитивное моделлирование ("модели развития города" и т.п.). Необходимо учитывать связанные переменные, накопители и обратные связи.

Нельзя обойтись одной аналитикой, одной имитацией - плохо. Необходимо комбинировать модели. Что имитировать и что анализировать? Всё явное - аналитическое. Модель становится иерархической. Из такой композитной системы методами декомпозиции нужно дойти до элементарных действий (когда эти действия можно описать типовыми математическими средствами).



21.09.15 -------------------------------------------------------------

Подходы имитационного моделирования как иерархического способа моделирования

  ДСМ	|  АМ	| СД	|
заявки	|АО		|Накоп	|
ПВ		|ИПП	|ОА		|
Сети, Р	|ДС		|ПД		|

Дискретно-Событийное моделирование: заявки, потоковые диаграммы, сети, множество ресурсов
Агентное моделирование: активные объекты, индивидуальные правила поведения, динамика среды, системная динамика
СД: Накопители, обслуживающие аппараты, потоки данных
а ^ диаграмме с точки зрения уровня абстракции, каждый следующий чуть выше предыдущего. Если рассматривать продвижение модельного времени: влево дискретное, вправо непрерывное.

Имитационное моделирование является эффективным, но имеющим недостатки методом моделирования сложных объектов. Трудности использования ИМ связаны с обеспечением адекватности описания системы, интерпретацией результатов, обеспечением стохастической сходимости процесса моделирования. Если что-то описывается в матричной форме, проблемой может являться размерность и трудоёмкость данного метода.
Часто перед построением имитационных моделей, являющихся динамическими по своей сути, оказывается полезным (а иногда и необходимым) осуществить предварительный статический анализ. При этом выявляются функции, выполняемые в системе, взаимосвязи элементов системы, формализуются потоки событий. Эти спецификации позволяют выявить определенный объем знаний и характеристик системы для построения имитационной модели и уменьшения вероятности ошибок.

В имитационном моделировании с точки зрения средств выделяют по возможностям и функциям исследования три основных этапа:
1. Создание имитационной модели на:
	универсальном языке высокого уровня (си, паскаль, ...)
	специализированные языки моделирования (GPSS)
	объектно-ориентированном языке (ModSym)
2. Использование при разработке имитационных моделей проблемно-ориентированных систем и средств. Такие системы как правило не требуют от исследователя знаний программирования, но позволяют моделировать лишь узкие классы моделируемых систем. При этом имитационная модель генерируется самой системой в процессе диалога с пользователем: это позволяет сделать описание системы достаточно быстрым, эффективным, избежать ошибок программирования. Таких систем несколько десятков, а языков - около семисот.
3. Использование методов искусственного интеллекта и, прежде всего, знаний при принятии решений в процессе имитации, управления имитационным экспериментом, реализация интерфейса взаимодействия с пользователем.
Нерешенной проблемой остаётся самый первый этап: концептуализация при ИМ, то есть перевод поставленной задачи в плоскость формализации: желательно на язык математики. Этот этап не может быть решён ни программистом, ни аналитиком в данной области самостоятельно. Необходимо создавать комплексную группу, включающую разных специалистов; на начальном этапе проекта вырабатывается формализм системы.
Ещё одна проблема - наличие обратной связи (системы управления).
В качестве примеров интеллектуальных средств моделирования можно рассмотреть системы RDO, AnyLogic и Arena.

***	В теории систем встречаются следующие базовые понятия:
	***	система - множество элементов (Упорядоченная совокупность), находящихся в отношениях и связи между собой.
	***	элемент - часть системы, представление о которой нецелесообразно подвергать дальнейшему членению при моделировании
	***	сложная система - система, характеризуемая большим числом элементов и большим числом взаимодействий элементов. Сложность системы определяется также видом взаимосвязей элементов, свойствами (целеннаправленности, целостности, членимости, иерархичности, многоаспектности).
	***	подсистема - часть системы (подмножество элементов и связей между ними), которая имеет свойства системы
	***	надсистема - система, по отношению к которой рассматриваемая система является подсистемой.
	******	структура - отображение совокупности элементов системы и их взаимосвязей. Понятие структуры отличается от понятия самой системы также и тем, что при описании структуры принимают во внимание лишь типы элементов и типы связей, без конкретизации значений их параметров.
	***	параметр - величина, выражающая свойства системы или её части, или влияющая на окружающую систему среду.

Рассмотрим свойства сложной системы
	Целенаправленность. Свойство искусственной системы, выражающее назначение системы. Необходимо для оценки эффективности вариантов системы.
	Целостность. Свойство системы, характеризующее взаимосвязанность элементов и наличие зависимости выходных параметров от параметров элементов. Причём, большинство выходных параметров не являются простым повторением или суммой параметров элементов.
	Иерархичность. Свойство сложной системы, выражающее возможность и целесообразность её иерархического описания: т.е. представление системы в виде нескольких уровней, между компонентами которых имеется отношение "целое - часть".

В англоязычной литературе встречаются термины modelling (только процесс построение модели) и simulation (анализ свойств модели (и системы, которую она отражает)).


Технические средства моделирования

Роль технических средств - создание системы и проведение эксперимента. Выполнять моделирование позволяют две структуры (два способа обработки информации): цифровое и аналоговое.
При построении цифровой вычислительной техники используются принципы Фон Неймана: программа представляется как данные; происходит разделение на ЦП (устройство для выполнения арифметическо-логических операций и управление вычислительным процессом), запоминающее устройство, ввод, вывод, устройство управления; двоичная арифметика (сложение и сдвиги, основное устройство - сумматор)...
Аналоговая техника. В основе заложен принцип моделирования, а не счёта. При использовании в качестве модели некоторой задачи электронных цепей, каждой переменной величине задачи ставится в соответствие определенная переменная величина электронной цепи. Основой построения такой модели является изоморфизм (подобие) исследуемой задачи и соответствующей ей электронной модели. В большинстве случаев при определении критериев подобия используются специальные приемы масштабирования соответствующих значений параметров модели и переменных задачи.
Аналоговая вычислительная машина реализует модель, изоморфную исследуемой задаче. Согласно своим вычислительным возможностям, АВМ наиболее приспособлены для исследования объектов, динамика которых описывается обыкновенными и в частных производных дифференциальными уравнениями. Также имеют место быть алгебраические уравнения. АВМ можно отнести к спецмашинам.
Под АВМ будем понимать совокупность электрических элементов, организованных в систему, позволяющую изоморфно моделировать динамику изучаемого объекта.

Главный элемент аналоговой техники - пульт управения.
							[		ПУ		]
			+------------------------+-----------------------+
-[система масштабирования]	[система управления	[система коммутации]
|						+--------|		+--------+--------|
|		[операционные блоки:|лин.операции|нелин.операции]
|								|	+---------------|
-[сис.контроля]		[блок операционных усилителей]
С точки зрения моделирования, аналоговая быстрее. Ограничена скоростью электронов; мгновенно получаем картинку (графики). Для обработки оных необходимо подключать цифровую технику, но результат получается сразу же. Главный недостаток: точность практически никакая.

АВМ общего назначения делят по производительности на малые, средние и большие. Речь здесь не про быстродействие, а про степень в уравнениях: 0<10 малые, <100 средние, 100+ большие.



28.09.15 -------------------------------------------------------------

Гибридная вычислительная машина - широкий класс вычислительных систмем, использующих как аналоговую, так и дискретную форму представления сигнала (обработки сигнала). Подклассы:
	АВМ, использующие цифровые методы численного анализа  (Итератор-1)
	АВМ, программируемые с помощью ЦВМ. Программируются масштабные коэффициенты, которые приводят физические параметры к параметрам модели
	АВМ с цифровым управлением и логикой (Хайдак)
	АВМ с цифровыми элементами (вольтметры, запоминающие устройства, но не решающие элементы)
	ЦВМ с аналоговыми арифметическими устройствами
	ЦВМ, допускающие программирование аналогового типа (дифференциальные анализаторы).
Общая схема ГВМ:
	АВМ
	 |------[Аналого-Цифровой преобразователь, ЦАП]
	ЦВМ

Сравнение характеристик АВМ и ЦВМ
Показатель	АВМ	ЦВМ
Тип информации	Непрерывный	Дискретный
изменение значений	величиной напряжения	числовым значением
базовые операции	арифметическое интегрирование	арифметические
принцип вычисления	высокопараллельные	последовательно-параллельные
режим реального времени	без ограничений	ограниченные возможности
динамическое изменение решаемой задачи	посредством системы коммутации	в диалоговом режиме
основные профессиональные требования к пользователю	профессиональные знания + методика моделирования	знание основ ПО ЭВМ + алгоритмизация
уровень формализации задач	ограничены моделью решаемой задачи	высокий
способность решения логических задач	ограниченная	высокая
точность вычислений	порядка 1е-4	ограничена разрядностью, ~1е-40
диапазон представления чисел	1..1е-4	1е-40..1е40
класс решаемых задач	дифференциальные и алгебраические уравнения	всё
специальные функции	ограниченный набор	широкий класс специализированных функций
уровень миниатюризации	ограниченный	высокий
сферы применения	спецмашины	практически везде
пользовательский интерфейс	низкого уровня	высочайший уровень



Основы теории моделирования

Моделируется объект - сложная дискретная система, на которую подается множество воздействий
	|
	vV
X=>[H S]=>Y
Модель объекта моделирования можно представить в виде множества величин, описывающих процесс функционирования реальной системы, и образующих в общем случае следующие подмножества:
1. совокупность входных воздействий x_i\inX, i=1,n_x
2. совокупность воздействий внешней среды v_l\inV l=1,n_v
3. совокупность внутренних собственных параметров системы h_k\inH k=1,n_k
4. совокупность выходных параметров системы y_j\inY j=1,n_y
В общем случае, X,V,H,Y являются элементами непересекающихся подмножеств и содержат как детерминированные, так и стохастические характеристики.
При моделировании функционирования сложной системы С, входные воздействия X, внутренние параметры H и воздействия внешней среды V, являются независимыми (экзогенными). В векторной форме можно записать следующим образом:
\vec(x(t)) = (x1(t), x2(t), ... x_nx(t))
\vec(v(t)) = (v1(t), v2(t, ..., v_nv(t))
\vec(h(t)) = ..
Выходные характеристики системы являются зависимыми (эндогенными):
\vec(y(t))=(y1(t),.....)
Вводится параметр времени - наиважнейший элемент моделирования.
Процесс функционирования системы С описывается во времени некоторым оператором, который в общем случае преобразует независимые переменные в зависимые, в соответствии со следующим соотношением: y(t)=F_S(\vec(x),\vec(v),\vec(h),t) (1)
Зависимость 1 называется законом функционирования системы. В общем случае, этот закон может быть задан в виде функции, функционала, логических условий, в алгоритмическом или табличном виде.
^ запись позволяет записать задачу в общем виде, формализовать её. Выделяются наиболее важные подклассы воздействий, указав ограничения. Действия можно преобразоыввать с помощью множества алгоритмов.

Важным является понятие алгоритма функционирования A_S, под которым здесь подразумевается метод получения выходных характеристик У с учетом входных воздействий Х, воздействий внешней среды В и соответствующих параметров системы Н. Один и тот же закон функционирования Ф_С может быть реализован различными способами - т.е. с помощью множества различных алгоритмов.
(1) Может быть получено через свойства системы в конкретные моменты времени, которые называются _СОСТОЯНИЯ_ системы:
\vec(z)=(z1,z2,...z_p), p=1,n_z,...
Если рассматривать процесс функционирования сложной системы Ы как последовательную смену состояний (з1(т), з2(т), ...), то они могут быть интерпретированы как координаты точки в к-мерном фазовом пространстве. Причем каждой реализации процесса будет соответствовать некоторая фазовая траектория. Совокупность всех Z(t) называется пространством состояний объекта моделирования. Состояние системы в момент т_нач <= т <= т_к полностью определяется начальными условиями \век(з^0)=(з1^0, з2^0, ...), где з1^0 - состояние системы в момент времени т0.
.. внутренними параметрами и воздействиями внешней среды, которые имели место за промежуток времени т-т0 с помощью двух векторных уравнений:
век з (т) = русскаяФ(век з0, век х, век х, век н, т). Выходной параметр век у(т) = (век з, т). Наконец, если поставить одно в другое, то век у(т) = Ф(русскаяФ(), т).
В общем случае время в модели может быть непрерывным на интервале, а может быть конечным.

Таким образом, под математической моделью реальной системы понимают: конечное множество переменных х(т), в(т), н(т) вместе с математическими связями между ними и характеристиками у(т).


Типовые математические схемы
Выделяются по характеру процесса функциоинирования.
процесс ф.	типовая мат.схема	обозначения
непрерывно-детерминированный подход	дифференциальные уравнения	D-схема
дискретно-детерминированный	конечные автоматы	F-схема
дискретно-стохастический процесс	вероятностные автоматы	P
непрерывно-стохастический	системы массового обслуживания (queuing system)	Q
универсальный подход	аггрегативные системы	A
Данные схемы были введены, чтобы "не изобретать велосипед". Эти схемы при своей реализации дают правильный результат, подтверждая адекватность модели.

Рассмотрим примеры.
НДП: колебательный контур с ёмкостью Цк и индукцией Лк, или маятник массой М и длиной Л.
В контуре: L_k * d^2q(t)/dt^2 + q(t)/C_k = 0. q(t) - заряд на конденсаторе. Период T_k = 2\pi\sqrt(L_kC_k).
В маятнике: m*l_M^2*d^2\theta(t)/dt^2 + m*g*l_M\theta(t)=0. Период T = 2\pi\sqrt(l/g)
Суть объектов - разная, но процессы описываются обыкновенными ДУ. Введём понятия h_2 = L_k = m*l_M, h_1 = 0 = 0, h_0 = 1/C_k = m*g*l. Если теперь положить состояние z(t) = q(t) = \theta(t), то можно записать общий вид уравнения, описывающего функционирование данных объектов: h_2*d^2a(t)/dt^2 + h_1*dz(t)/dt + h_0*z(t) = 0. Нуль символизирует собой отсутствие внешних воздействий X (включающих в себя заодно и V).

Состав имитационной модели сложной дискретной системы. На входе: поток исходных данных, затем модули преобразования этих данных.
											[модель случайных возмущений]
												v \vec(V)
-даннные-> [преобразование исх.данных] -Х-> [модель управляемого объекта] -Y'-> [модуль сбора и вывода статистической информации] -> Y
																		^
										-P->[модель системы управления]-|Pnew



05.10.15 -------------------------------------------------------------

Формализация и алгоритмизация процесса функционирования сложных систем

Сущность компьютерного моделирования - проведение эксперимента с моделью, который представляет собой некоторый программный комплекс, описывающий формально или алгоритмически поведение элементов системы в процессе её функционирования (т.е. взаимодействия их друг с другом и с внешней средой). Основные требования, предъявляемые к модели в процессе функционирования системы:
1. полнота модели - должна предоставлять пользователю возможность получения необходимого набора характеристик, оценок системы, с требуемой точностью и достоверностью.
2. гибкость модели - должна давать возможность воспроизведения различных ситуаций при варьировании структуры, алгоритмов и параметров модели. Структура должна быть блочной - допускать возможность замены, добавления, исключения некоторых частей схемы без переделывания всей модели.
3. компьютерная реализация модели должна соответствовать имеющимся техническим ресурсам (память, быстродействие, БД и т.п.).

Процесс моделирования, включаая разработку и машинную реализацию модели, является итерационным. Этот итерационный процесс продолжается до тех пор, пока не будет получена модель, которую можно считать адекватной в рамках поставленной задачи. Вычленяется объект на базе некоторого анализа, синтезируется, и снова начинает анализироваться.

Основные этапы моделирования больших систем:
I. Построение концептуальной (описательной) модели.
	формулируется модель
	строится её формальная схема
Основное назначение - переход от содержательного описания объекта к его математической модели. Необходимо определить, какие ограничения накладываются чтобы не рассматривать проблему в общем. Если накосячить - то ошибка приведет к фатальному результату.
Исходный материал этапа: содержательное описание объекта. Последовательность действий:
	проведение границ между системой и внешней средой
	исследование моделируемого объекта с точки зрения выделения основных составляющих процесса функционирования системы (по отношению к цели моделирования)
	переход от содержательного описания системы к формализованному описанию свойств процесса функционирования (к концептуальной модели):
		исключение из рассмотрения некоторых второстепенных элементов описания
	оставшиеся элементы модели группируются в блоки трех групп:
		i - имитатор воздействий внешней среды
		ii - собственно модель функционирования объекта
		iii - вспомогательные объекты
	процесс функционирования системы так разбивается на подпроцессы, чтобы построение отдельных подпроцессов было элементарно и не вызывало особых трудностей.
II. Этап алгоритмизации модели и ее программирование.
Исходный материал: блочная логическая схема модели. Последовательность действий:
	разработка схемы моделирующего алгоритма
	разработка схемы программы
	выбор технических средств для реализации компьютерной модели
	программирование модели и отладка программы
	проверка достоверности программы на тестовых примерах
	создание технической документации
III. Этап получения и интерпретации результатов моделирования
Компьютер используется для проведения рабочих расчетов по готовой программе. Результаты этих расчетов позволяют в результате анализа сделать вывод о характеристиках процесса функционирования моделируемой системы.
Последовательность действий:
	планирование машинного эксперимента. Различают активный и пассивный эксперимент. Составление плана проведения эксперимента с указанием комбинаций переменных и параметров, для которых должен проводиться эксперимент. Необходимо получить максимальный объем информации об объекте моделирования при минимальных затратах машинного времени.
	проведение рабочих расчетов (контрольная калибровка модели)
	статистическая обработка результатов и представление их в наглядном (удобном пользователю) виде.
	составление технической документации

Различают стратегическое и тактическое планирование компьютерного эксперимента.
При стратегическом планировании ставится задача построения оптимального плана эксперимента для достижения цели, поставленной перед моделированием. (Оптимизация структуры с использованием генетических алгоритмов; параметрическая оптимизация; оптимизация алгоритмов)
Тактическое преследует частные цели оптимальной реализации каждого конкретного эксперимента из множества необходимых, заданных при стратегическом планировании.

Итеративная калибровка модели
	=объект=>[ф]+
				[сравнение по критерию]->ошибка допустима? -да-> пропускаем, y'
	=модель=>[ф]+							|
			  +-----------------------------+
Три класса ошибок (по убыванию страшности):
1. Ошибки формализации. Неполное \ недостаточно подробное модели объекта или предметной области.
2. Ошибки решения. Некорректный \ слишком упрощенный метод построения модели.
3. Ошибка задания параметров модели (на стадии эксперимента).

Проверка адекватности и корректировки модели
Проверка адекватности модели некоторой системы заключается в анализе ее соразмерности и равнозначности системы. Адекватность нарушается из-за идеализации внешних условий и режимов функционирования; пренебрежением некоторых случайных факторов.
Простейшая мера адекватности применительно к ^ схеме калибровки:
	Yмодели, Yобъекта. \deltaY - разность по модулю, либо относительная погрешность. Считают, что модель адекватна с системой, если вероятность того, что отклонение \deltaY не превысит некоторой величины \delta, больше допустимой вероятности.
Практическое использование критерия невозможно, потому что:
	для проектируемых \ модернизируемых систем отсутствует информация о характеристике Y объекта
	система оценивается не по одной, а по множеству характеристик
	характеристики могут быть случайными величинами и функциями
	отсутствует возможность априорного точного задания предельных отклонений и допустимых вероятностей

На практике оценка адекватности обычно проводится путем экспертного анализа разумности результатов моделирования.
Выделяют следующие виды проверок:
	проверка моделей элементов
	проверка моделей внешних воздействий
	проверка концептуальной модели
	проверка способов измерения и вычисления выходных характеристика

Корректировка модели. Если по результатам проверки адекватности выявляются недопустимые рассогласования (объекта и модели), необходимо вносить изменения:
	глобальные - в случае обнаружения методических ошибок в концептуальной/математической модели
	локальные - связаны с уточнением некоторых параметров и алгоритмов. Выполняются путем замены моделей компонентов системы и внешних воздействий на эквивалентные, но более точные.
	параметрические - изменения некоторых специальных параметров, называемых калибровочными
III этап завершается определением и фиксацией области пригодности модели, под которой понимается: множество условий, при соблюдении которых точность результатов моделирования находится в допустимых пределах.

Схема взаимосвязи технологических этапов моделирования.
/*скопипастить из лекции прошлого года + фото*/
добавления: описание => содержательное описание; язык => язык формализации; стрелочка (концептуаьной модели)->[составление формального описания]; стрелочка (план эксперимента)->[проведение натурэксперимента с прототипами]; стрелочки [интерпретация]->[составление концепт],->[построение описания имитационной модели],->[испытание ИМ]; стрелка (результаты)->[интерпретация]



12.10.15 -------------------------------------------------------------

{ доклад 
Стратегическое планирование в эксперименте
Дана система, нужно получить информацию о ней. Строится модель, реализуемая на ЭВМ. Учитывается ограниченность вычислительных ресурсов. Отличие от тактического: тактическое - в деталях, как проводится серия экспериментов; стратегическое - обобщает. 
//Стратегическое - внешнее проектирование по отношению к объекту, сбор общей информации о нем
Главная проблема - необходимо учитывать множество факторов (параметров) - внешней среды и т.п.
Многофакторная функция реакции - описывает, как модель реагирует на входные параметры; построить функцию сложно. В ряде случаев эту проблему можно обойти, представляя эксперимент над моделью как набор экспериментов, где в каждом наблюдается только одна реакция. Зачастую переменные реакции связаны друг с другом, из-за чего такое разбиене будет неправильно. Рационально использовать интегральные оценки и функцию полезности.
Также - стохастическая сходимость результатов эксперимента. Сходимость необходимо оценивать, обрабатывать и строить доказательства. Целью эксперимента является получение характеристик функционирования системы с помощью модели. Стохастическая сходимость может быть очень медленной; при уменьшении выборки может понадобиться значительно бОльшее число повторных прогонов.

СП состоит из двух этапов - построения структурной модели. Выбирается из того как система работает физически; определяются все факторы и их уровни. Уровень - некоторая характеристика, которая тем больше чем важнее фактор и чем большее число раз их нужно пересчитывать в эксперименте. Для простых факторов принимается 1, для переменных - число уровень не меньше двух. Если фактор изменяется часто, то уровень будет большим. Нужно расмотреть систему с разных точек зрения - либо исследовать поведение системы в целом, либо сосредоточиться на решении какой-то проблемы.
Второй шаг - определение уровней, на которых следует измерять каждый фактор. Учитывается, что каждый новый уровень увеличивает затраты ресурсов ЭВМ.
На основе структурной модели строится функциональная - "что может быть сделано с учетом ресурсов". Определяет количество элементов (структурный блок, простейший эксперимент с одним фактором и уровнем измерения). Бывают полные (участвуют все элементы структурной модели) и неполные. Полная как правило не реализуется из-за ограниченности ресурсов. Цель построения - компромисс между требуемыми действиями и ресурсами.
ФМ строится на основе варьировании числа факторов, уровней, повторений экспериментов, затрат времени на прогон и ресурсов.

Стратегические цели можно поделить на два класса - задача анализа и задача синтеза (известна реакция, ищется при каких факторых будет достигнута).
}

	Исследование вычислительных систем
Выделяют следующие уровни проектирования:
	1. структурный
	В качестве типовых матсхем - системы массового обслуживания, А-схемы, сети Петри, вероятностные автоматы
	2. функционально-логический уровень проектирования
		1. подуровень регистровых передач
		Элемент моделирования - регистры, сумматоры; всё разделяется на комбинационные и последовательные схемы.
		2. логический уровень
		Моделируем работы ЛЭ, когда они синтезированы на уровне одной кремниевой подложки.
	Используются цифровые автоматы, Ф-схемы
	3. конструкторский
	ОДУ, ДУ в частных производных.
	Характерен тем, что решаются в основном задачи отвода тепла, вентиляции, оптимального размещения интегральных схем (оптимизация длины проводников) либо вопросы технологичности многослойной печатной платы.
Мы сосредотачиваемся на структурном уровне, СМО и сети Петри.

Моделирование на системном уровне
Вычислительная система - комплекс аппаратных и программных средств, которые в совокупности выполняют определенные рабочие функции.
Коллектив пользователей - сообщество людей, которые используют вычислительную систему для удовлетворения своих нужд по обработке информации.
Входные сигналы (программы, данные, команды), которые создаются коллективом пользователей, называются рабочей нагрузкой.
Получаем структуру вычислительной установки:
 -+->коллектив пользователей -рабочаянагрузка-> вычислительная система -+->
  +---------------------------------------------------------------------+
  обратная связь

Введем понятие индекса производительности. ИП - некоторый описатель, используемый для представления производительности системы. Различают качественные и количественные индексы:
качестсвенные
	мощность системы команд (RISC\CISC)
	легкость использования системы (интерфейсы)
количественные
	пропускная способность (объем информации, обрабатываемой за единицу времени)
	время реакции (ответа) системы - время между предъявлением системе входных данных и появлением соответствующих выходных данных
	коэффициент использования оборудования - отношение времени использования указанной части оборудования к интервалу времени, за который производится наблюдение.
	
Концептуальная модель вычислительной системы включает в себя сведения о:
	выходных и конструктивных параметрах системы
	её структуре
	особенностях работы каждого элемента
	характере взаимодействия между ресурсами
	постановке прикладной задачи, определяющей цели моделирования
	исходных данных, необходимых для исследования
Основные задачи:
	1. определение принципов организации вычислительной системы
	2. выбор архитектуры, уточнение функций вычислительной системы, их разделение на подфункции, реализуемые аппаратным или аппаратным путем
	3. разработка структурной схемы (состав устройств, способы их взаимодействий)
	4. определение требований к выходным параметрам ФЛУП (опускаемся от уровня вычислительной системы на уровень регистровых передач). Входные данные - команды, реализуемые в АЛУ; преобразуются в нули и единицы; запуск алгоритма разбора последовательности и выдачи результата.

	Системы массового обслуживания, Q-схемы
Особенности непрерывно-стохастического подхода рассматриваем на примере использования в качестве типоой математической схемы систем массового обслуживания (queuing system).
------------------------------
		прибор обслуживания
	Накопитель			Канал
-v_i->|||||||]			 ( )->w_i
-----------------------------
Канал в единицу времени может ообрабатывать только одну заявку.

Поток событий - последовательность событий, происходящих одно за другим в случайные моменты времени.
Поток называется однородным, если он характеризуется только моментами поступления событий (вызывающими моментами).
Неоднородный поток - задается не только вызывающими моментами, но и функцией f - набором признаков события (приоритет, тип заявки и т.п.)

Если интервалы времени между сообщениями независимы между собой и являются случайными величинами - поток с ограниченным последействием.
Поток событий называется ординарным, если вероятность, что на малый интервал времени (\inc t, примыкающий к моменту времени t) попадает больше одного события, пренебрежительно мала по сравнению вероятностью попадания на интервал ровно одного события.
Поток называется стационарным, если вероятность появления некоторого числа событий на некотором интервале \tau зависит лишь от длины этого интервала и не зависит от того, где на оси времени взят интервал.
Среднее число сообщений на участке времени \inc t в единицу времени для ординарного потока:
P_(>1)(t,\inct) + P_1(t,\inct) = P_1(t,\inct)
=>
lim_(\inct->0)(P_1(t,\inct))/(\inct)=\lambda(t) - интенсивность ординарного потока.
Для стационарного потока интенсивность не зависит от времени, =\lambda.

В общем случае в i-м приборе мы имеем поток заявок - интервалы времени между моментами появления заявок на входе канала. Это подмножество неуправляемых параметров.
Поток обслуживания - интервалы времени между началом и окончанием обслуживания заявки. Подмножество управляемых параметров.
Заявки, обслуженные каналом и заявки покинувшие i-й прибор необслуженными, образуют выходной поток Y_i, т.е. интервалы времени между моментами выхода заявок.

Также процесс функционирования прибора можно представить через состояния. Могут быть введены подмножества состояний: накопителя и канала. Состояния накопителя - пуст, обрабатывает, полностью занят. Канал - занят или свободен.

В практике моделирования, элементарные Q-схемы обычно объединяются. Если каналы различных приборов соединены параллельно, то имеет место многоканальное обслуживание; если последовательно - многофазное.

Используется оператор сопряжения, отражающий взаимосвязь элементов структуры между собой.
Различают разомкнутые и замкнутые Q-схемы. В разомкнутых схемах выходной поток не может попасть на вход, а в замкнутых схемах количество заявок постоянно.

Собственные внутренние параметры Q-схемы:
	количество фаз
	количество каналов в каждой фазе
	количество накопителей в каждой фазе
	емкость i-го накопителя. В ТМО принято:
		если емкость i-го накопителя = 0 - система с потерями
		если емкость стремится к бесконечности - система с ожиданием
		если емкость конечна - система смешанного типа
Для задания Q-схемы также необходимо описать алгоритм её функционирования (и не один, а много - схема может реализовывать несколько алгоритмов), которые определяют набор правил поведения заявок в системе. Неоднородность заявок, отражающая процесс в той или иной реальной системе, учитывается с помощью введения классов приоритетов (статических и динамических, относительных, абсолютных).
Весь набор возможных алгоритмов поведения заявок в Q-схеме можно представить также в виде оператора алгоритмов A:
Q = (W,U,H,Z,R,A)
поток, отображающий входные заявки
поток, отображающий выходные заявки
подмножество собственных внутренних параметров
множество состояний системы
оператор сопряжения
множество алгоритмов, которые могут реализовать данный подкласс Й-схем


*	*	*	19.10.2015 by vlad	*	*	*


26.10.15 -------------------------------------------------------------

Реальные процессы весьма часто обладают последействием и поэтому не являются марковскими. Тем не менее, иногда при исследовании таких процессов удается воспользоваться методами, разработанными для марковских цепей. Наиболее распространенными являются метод разложения случайного процесса на фазы (метод псевдосостояний) и метод вложенных цепей Маркова. Подробно рассмотрим первый и упомянем о втором.
	Метод разложения:
Состояния, потоки переходов из которых являются не марковскими, заменяются эквивалентной группой некоторых фиктивных состояний, потоки переходов их которых уже являются марковскими. Условие статистической эквивалентности реального состояния и фиктивных могут в каждом конкретном случае выбираться по-своему.
Например - в качестве критерия можно выбрать min\integral_t1^t2(\lamba_iЭкв(\tau)-\lambda_i(\tau))dt. Здесь лямбда_иэкв - эквивалентная интенсивность перехода в i-й группе переходов, обладающей интенсивностью \lambda_i(\tau). За счет расширения числа состояний системы некоторые процессы удается точно свести к марковским. Созданная таким образом новая система статистически эквивалентна или близка к реальной системе. Её можно исследовать обычными методами с помощью аппарата теории марковских цепей.
К числу процессов, которые введением фиктивных состояний можно точно свести к марковским, относятся процессы, формализовать которые можно с помощью закона Эрланга. В случае потока Эрланга k-го порядка, интервал времени между соседними событиями представляет собой сумму k независимых случайных интервалов, распределенных по показательному закону. Сведение ПЭ к-го порядка к пуассоновскому осуществляется введением k псевдосостояний. Интенсивности переходов между псевдосостояниями равны соответствующему параметру ПЭ.
Полученный таким образом эквивалентный процесс является марковским, т.к. интервалы времени нахождения в различных состояниях подчиняются показазтельному закону распределения.

Пример: некоторое сложное устройство S, которое выходит из строя с интенсивностью \lambda - причем поток отказов Пуассоновский. После отказа устройство восстанавливается - время восстановления распределено по закону Эрланга 3 порядка: f(t)=0.5\mu(\mu*t)^2*exp(-\mu*t). Найти предельные вероятности возможных состояний системы.
Система может принимать два возможных состояния: Ы0 (исправно) и Ы1(отказало и восстанавливается. Переход 0-1 осуществляется под воздействием пуассоновского потока, 1-0 - Эрланга. Если есть ПЭ - случайное время восстановления можно представить в виде суммы 3 (порядок) случайных временных интервалов, распределенных по показательному закону с интенсивностью \mu: t=t1+t2+t3.
Состояние Ы1 заменяем последовательной цепочкой из 3 псевдосостояний.
Граф - 4 состояния: Ы0, Ы11, Ы12, Ы13. 11,12,13 - всё состояние Ы1, разбито на псевдосостояния. Интенсивность 0-1 = \lambda, 11-12 = \mu, 12-13 = \mu, 13-0 = \mu.
Для установившегося состояния необходимо составить уравнения Колмогорова, и к ним добавить два доп.условия - условие эквивалентной замены состояния Ы1: p1=p11+p12+p13 и условие нормировки: p0+p1=1.
{ -\lambda p0 + \mu p13 = 0
{ -\mu p11 + \lambda p0 = 0
{ -\mu p12 + \mu p11 = 0
{ -\mu p13 + \mu p12 = 0
=>
{ p1 = p11 + p12 + p13
{ p0 + p1 = 1
{ -\lambda p0 + \mu p13 = 0
{ -\mu p11 + \lambda p0 = 0
{ -\mu p12 + \mu p11 = 0
{ -\mu p13 + \mu p12 = 0
=>
{ p11 = (\lambda p0) / \mu
{ p12 = (\mu p11) / \mu
{ p13 = 
=> p11 = p12 = p13 = 1/3 p1 = 1/3 (1-p0)
 p0 = (\mu p11) / \lambda
 p11 = 1/3 (1 - (\mu p11) / \lambda )
 3\lambda p11 = \lambda - \mu p11
 p11 (3\lambda + \mu) = \lambda
 p11 = 1 / (3\lambda + \mu)
 p0 = 1 - 3\lambda/(3\lambda + \mu);  p1 = 3\lambda / (3\lambda + \mu)
 
	Метод вложенных цепей маркова:
Вложенные марковские цепи образуются следующим образом - в исходном случайном процессе выбираются такие случайные (по времени t_k) процессы, в которых значения процесса образуют марковскую систему. Моменты тк как правило являются случайными и зависят от свойств исходного процесса. Дальше обычными методами эти моменты используются для решения уравнений.
Частный случай - полумарковский случайный процесс; случайный процесс с конечным\счетным множеством состояний, если заданы вероятности перехода системы из одного состояния в другое (p_ij) и __распределение__ времени пребывания процесса в каждом состоянии, например в виде функции распределения или плотности распределения случайной величины.

	Метод монте-карло - метод статистических испытаний:
Для произвольных потоков событий, переводящих систему из состояния в состояние, аналитические решения получены только для отдельных частных случаев. ММК используется, когда аналитику нельзя получить.
Вместо того чтобы описывать случайные явления, производится "розыгрыш", моделирование случайного явления с помощью некоторой процедуры, дающей случайный результат. Произведя такой розыгрыш большое число раз и собрав статистический материал, получаем множество реализаций случайного явления.
Возьмём единичный квадрат и посчитаем площадь произвольной фигуры в нем. Генерируем равномерно распределенные Х,У, получаем кучу точек, считаем количество попавших в фигуру.
Суть метода:
1. любым способом получаем два числа, Xi, Yi, подчиняющихся равномерному распределению случайных чисел на отрезке [0..1]. Числа определяют координаты
2. анализируем принадлежность сгенерированной точки некоторой поверхности; если принадлежит - ++счетчик1, иначе - ++счетчик2.
Процедура генерации двух случайных чисел с заданным законом распределения и проверка принадлежности точки произвольной поверхности повторяется N раз. Дальше вычисляем площадь (случайная величина): количество попавших / количество сгенерированных.
Точность метода: \sqrt(1/n). Преимущество метода статистических испытаний - универсальность, обуславливающая возможность всестороннего статистического исследования объекта.
Однако для реализации этой возможности нужны достаточно полные статистические сведения о параметрах элементов, входящих в систему. Недостатки: большой объем вычислений.


Способы получения случайных чисел
1. Аппаратный
2. Табличный
3. Алгоритмический.
Аппаратный. Случайные числа как правило вырабатываются специальной электронной приставкой, генератором случайных чисел, служащей в качестве одного из внешних устройств компьютера. Реализация этого способа не требует дополнительных вычислительных операций - необходима только операция обращения к внешнему устройству.
[источник шума]				|__шум___
[ключевая схема]			|_прямоуг.участок__
[формирователь импульсов]	|_наложение__
[пересчетная схема]			|_значения t_i, t_i1_
КС - вырезает из шума нужный отрезок.
Случайное число - разница между ti и t_(i+1).

Табличный - СЧ формируются в виде таблицы и помещаются во внешнюю\оперативную память. Иногда формируют специальный файл.
Алгоритмический - рассмотрим потом более подробный

Способ	Достоинства	Недостатки
Аппаратный	Запас чисел неограничен; в ОП не занимает места; небольшой объём вычислений.	Требуется периодическая проверка на случайность; нельзя воспроизвести последовательность многократно; используется спецустройство; нужно обеспечивать стабильность (защиту от внешних значений), требует время на обращение.
Табличный	Требуется однократная проверка на случайность; можно воспроизводить последовательность.	Запас чисел ограничен; занимает место в ОП, требует время на обращение.
Алгоритмический	Однократная проверка; многократное воспроизведение последовательности; места в ОП почти не занимает; не требуется внешнее устройство\файл.	Запас чисел последовательности ВСЕГДА ограничен периодом; затраты машинного времени.

Алгоритмические способы ГПСЧ
	Выделение значения дробной части многочлена первой степени (Yn = A*n + b). Если Н пробегает значения всего натурального ряда чисел, то Yn выглядит весьма хаотично. Карл Якоби доказал, что при рациональном коэффициенте А множество Y конечно, а при иррациональном - бесконечно и всюду плотно в интервале 0..1. Для многочленов большей степени задача была решена Германом Вейлем. Критерий - равномерность распределения любой функции от натурального ряда чисел ("эргодичность" - среднее по реализации псевдослучайных чисел равно среднему по всему их можностью с вероятностью 1). Недостаток: в компах нет иррациональности, при попытке замены - короткий период.
	(ФонНейман) Каждое последовательное число - образуется возведением предыдущего в квадрат и отбрасывание цифр с обоих концов
	g_n1 = (K g_n + C) mod M. Наибольший период: при k = 3+8i или 5+8i (комплексные числа). Фарсайт доказал, что последовательности таки нехорошие.
	Метод Фибоначчи - на одноименных числах и натуральной арифметике.
Наилучший способ - смешивать алгоритмы.

ДЗ: свойства функции\плотности распределения случайных величин; графики всех случайных величин.


02.11.15 -------------------------------------------------------------

Алгоритмический способ получения последовательности ПСЧ

Для получения значений СВ из последовательности случайных чисел с заданным законом распределения обычно используют одно или несколько значений равномерно распределенных случайных величин. Псевдослучайные равномерно распределенные случайные числа получаются в компьютере программным способом с помощью некоторого рекуррентного соотношения (i-е значение получается либо из i-1го либо из группы предыдущих) путем определенного алгоритма, состоящего как правило из арифметических и логических операций.
Программа на Фортране для генерации равномерно распределенной последовательности [0..1]:
subroutine randum(ix, iy, rn)
	iy = ix * 1220703125
	if( iy) 3, 4, 4
3:	iy = iy + 2147483647 + 1
4:	rn = iy
	rn = rn * 0.4656613e-9
	ix = iy
	return
end
Обращение:
call randum(ix, iy, yfl),
ix - число, которое при первом обращении должно содержать нечетное целое, состоящее менее чем из 9 цифр.
iy - полученное случайное число, используемое при обращении к последующим процедурам
третий параметр - полученное равномерно распределенное число в интервале [0..1]

На Паскале:
var
	ei: integer
	xr: double
const
	m34: double = 28395423107.0
	m35: double = 34359738368.0
	m36: double = 68719476736.0
	m37: double = 137438953472.0
function rand(n: integer): double;
var
	s,w: double;
	i: integer;
begin
	if = 0 then
	begin
		x := m34;
		rand := 0;
		exit;
	end;
	s := -2.5;
	for i := 1 to 5 do
	begin
		x := 5.0 * x;
		if x >= m37 then
			x := x - m37;
		if x >= m36 then
			x := x - m36;
		if x >= m35 then
			x := x - m35;
		w := x / m35
		if n = 1 then
		begin
			rand := 2;
			exit;
		end;
		s := s + w;
	end; //for 
	s := s * 1.54919;
	rand := (sqr(s) - 3.0) * s * 0.01 + s;
end;
Обращение:
r := rand(0);
for i := 1 to 200 do
	writeln( rand(2):12:8 );
Здесь при n=0 происходит "настройка" программы, при n=1 - равномерное распределение и при n=2 - гауссово.

Для имитации равномерного распределения на интервале [а..б] используется обратное преобразование функции плотности: (x-a)/(b-a)=R, где р - равномерно распределенная СВ [0..1]
x = a + (b-a)*r

В основе построения программы, генерирующей случайные числа с законом распределения, отличным от равномерного, лежит метод преобразования последовательности случайных чисел с равномерным законом распределения в последовательность СЧ с заданным законом распределения.
F(t) = \integral_(-\infty)^(t)(f(x))dx = R
Метод основан на теореме, утверждающей, что СВ Х, принимающая значения, равные корню ^ уравнения, имеет плотность распределения f(x). R - равномерно распределенная [0..1].

1 - exp(-\lambda x) = R
x = (-1/lambda) ln(1 - R)

Распределение Пуассона. Относится к числу дискретных (таких, при которых переменная может принимать только целочисленные значения, включая нуль. С мат.ожиданием и дисперсией \lambda > 0. Для генерирования пуассоновских переменных используют метод Точер, в основе которого лежит генерирование случайных значений некоторой переменной r_i, равномерно распределенной на интервале [0..1], до тех пор, пока не станет справедливым следующее соотношение:
\П_(i=0)^(x)(r_i) >= exp(-\lambda) > \П_(i=0)^(x+1)(r_i)

При получении случайной величины, функция распределения которой не позволяет найти решение этого уравнения в явной форме, можно произвести кусочно-линейную аппроксимацию и затем вычислять приближенное значение корня. Кроме того, при получении случайных величин часто используют те или иные свойства распределений.

Пример на законе Эрланга (\lambda, k). При вычислении случайной величины воспользуемся тем, что результат может быть получен прореживанием потока Пуассона k раз. Достаточно получить k значений случайной величины, распределенной по показательному закону, и усреднить их.
1/k * \sum_(i=1)^(k)((-1/\lambda)ln(1-R_i)) = -1/(kx)\sum_(i=1)^(k)(ln(1-R_i))

Нормально распределенная случайная величина может быть получена как сумма большого числа случайных величин, распределенных по одному и тому же закону распределения с одними и теми же параметрами. СВ Х, имеющая нормальное распределение с математическим ожиданием и среднеквадратичным отклонением может быть получена по следующей формуле:
x = \sigma x \sqrt(12/n) \sum_(i=1)^(n)(R_i-n/2) + Mx
Для практического применения принимают n=12.


Методика построения программной модели

Для разработки программной модели (вычислительной системы) исходная система должна быть представлена как стохастическая система массового обслуживания (или сеть). Это объясняется следующим: информация от внешней среды поступает в случайные моменты времени. Длительность обработки различных типов информации может быть (в общем случае) различной. Таким образом, внешняя среда является своего рода генератором сообщений, а комплекс вычислительных средств.
Обобщённая структурная схема вычислительной системы:
ИИ1-+
ИИ2-+--+
ИИn-+ |БП|
		v
	  |ОА|
		+---+А1
			+А2
			+Аn
(ИсточникИнформации, БлокПамяти, ОбслуживающийАппарат, Абоненты)
Источники информации выдают на вход буферной памяти независимо друг от друга сообщения. Закон появления сообщений - произволен, но должен быть известен заранее (в случае последовательности чисел - проверить какую-нибудь гипотезу). В память сообщения записываются "в навал" и выбираются по-одному в осблуживающий аппарат по принципу FIFO.
Длительность обработки одного сообщения в обслуживающем приборе в общем случае может быть также случайной, но закон обработки также должен быть задан.
Быстродействие обслуживающего аппарата ограничено, поэтому на входе системы возможны сложения данных, ожидающих обработки.

Для каждого источника данных необходимо создать собственную программную модель (ПМ генератора). Точно также ПМ пойдёт для памяти и обслуживающего аппарата, плюс для каждого абонента.
Необходимо добавить два компонента: программу сбора статистики (по каждому программному компоненту иметь статистику сколько сообщений, производительность и т.п.) и управляющую программу (на данной системе реализовать множество различных алгоритмов - когда и в какое время обращаться\активизировать тот или иной программный модуль, функцию и т.п.).


Моделирование потока сообщений

Поток сообщений обычно моделируется моментами появления очередного сообщения в потоке. Текущий момент времени появления вычисляется по формуле t_i = \sum_(k=1)^(n)(T_k) + T_i. T_i - интервал между сообщениями.

Тип распределения	Выражение для расчета времени T_i
Равномерное [а..б]	T_i = A + (B-A) * R
Экспоненциальное	T_i = 1/\lambda ln(1-R)
Нормальное Гауссово	T_i = \sigma_x (\sum_(i=1)^(n)(R_j) - 6) + M_x
Эрланга	T_i = 1/(k \lambda) \sum_(j=1)^(k)(ln(1-R_j))



09.11.15 -------------------------------------------------------------

Моделирование работы обслуживающего аппарата
Программа, имитирующая работу обслуживающего аппарата, вырабатывает случайные отрезки времени, соответствующие длительности обслуживания требований. Требования от источника обрабатываются по нормальному закону с параметрами: матожидание и сигма; длительность обработки i-го требования t_обработки = \sigma_x (\sum_(j=1)^(12)(R_j) - 6) + M_x

[s = 0]
/j = 1,12\
	[r_j = f()]
	[s = s + r_j]
\		/
[t_обработки = Mx + (s - 6) * \sigma_x]
[t_i = t_i + t_обработки]
Здесь r - случайное число с равномерным законом распределения, Mx - матожидание, \sigma_x - среднестатистическое отклонение от заданного закона, t_обр - время обработки очередного сообщения, t - время освобождения аппарата.

Моделирование работы абонентов
Абонент может рассматриваться как обслуживающий аппарат, поток информации на который поступает от процессора. Для моделирования работы абонентов необходимо вырабатывать длительности обслуживания требований. Кроме того, абонент может сам быть источником заявок.
Эти заявки могут имитироваться с помощью генератора сообщений (распределенных по определенному закону). Таким образом, абонент моделируется как генератор или обслуживающий аппарат.

Моделирование работы буферной памяти
Буферная память должна производить запись и считывание чисел, выдавать сигналы переполнения или отсутствия данных, в любой момент времени располагать сведениями о количестве находящихся в памяти требований.
Саму запоминающую среду можно моделировать в простейшем случае одномерным массивом (лучше списком), размер которого определяет объём памяти. Каждый элемент массива может быть свободен (=0) либо занят - в этом случае в качестве эквивалента требования ему присваивается значение времени появления этого требования.

Анализ признака запись/чтение
	Запись: анализ на переполнение
		Переполнение: сообщение в блок статистики (переполнение)
		Иначе:
			запись информации по текущему адресу.
			изменение текущего адреса +1
	чтение: анализ на наличие
		пусто:	сообщение в блок статистики (нет)
		иначе:
			чтение по текущему адресу
			изменение текущего адреса -1
выход

Алгоритм реализации работы буферной памяти:
(вход)