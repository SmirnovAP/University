from progonka import *
from math import *
import numpy as np


def get_abs_dif(y_n_s_minus_1, y_n_s):
    return fabs((y_n_s - y_n_s_minus_1) / y_n_s)

def get_max_dif_from_result(T_list, T_new_list):
    max_dif = 0
    for i in range(len(T_list)):
        dif = get_abs_dif(T_list[i], T_new_list[i])
        if (max_dif < dif):
            max_dif = dif
    return max_dif



def calc_A_n(T_n, T_n_plus_1, data, h_x, h_t):
    return data.X_n_and_half(T_n, T_n_plus_1) * h_t / h_x


def calc_C_n(T_n, T_n_minus_1, data, h_x, h_t):
    return data.X_n_and_half(T_n, T_n_minus_1) * h_t / h_x


def calc_B_n(T_n, data, A, C, h_x, h_t, cur_x):
    return A + C + data.c_T(T_n) * h_x + data.p_x(cur_x) * h_x * h_t

def calc_F_n(T_n, data, h_x, h_t, cur_x, T_time_ago):
    return data.f_x(cur_x) * h_x * h_t + data.c_T(T_n) * T_time_ago * h_x

def calc_coeff(data, T_list, h_x, h_t, T_time_ago_list):
    A_list, B_list, C_list, F_list = [], [], [], []

    for i in range(1, len(T_list) - 1):
        cur_x = i * h_x

        #A = calc_A_n(cur_x, cur_x + h_x, data, h_x, h_t)

        #C = calc_C_n(cur_x, cur_x - h_x, data, h_x, h_t)

        A = calc_A_n(T_list[i], T_list[i + 1], data, h_x, h_t)

        C = calc_C_n(T_list[i], T_list[i - 1], data, h_x, h_t)

        B = calc_B_n(T_list[i], data, A, C, h_x, h_t, cur_x)
        F = calc_F_n(T_list[i], data, h_x, h_t, cur_x, T_time_ago_list[i])

        A_list.append(A)
        C_list.append(C)
        B_list.append(B)
        F_list.append(F)

    return A_list, B_list, C_list, F_list


def calc_left_condition(data, T_list, h_x, h_t, T_old_list, t):
    c_0 = data.c_T(T_list[0])
    c_1 = data.c_T(T_list[1])
    p_0 = data.p_x(0)
    p_1 = data.p_x(h_x)
    p_half = (p_0 + p_1) / 2
    c_half = (c_0 + c_1) / 2
    #X_half = data.X_n_and_half(0, h_x)
    X_half = data.X_n_and_half(T_list[0], T_list[1])
    y_0 = T_old_list[0]
    y_1 = T_old_list[1]
    f_0 = data.f_x(0)
    f_1 = data.f_x(h_x)
    f_half = (f_0 + f_1) / 2

    K_0 = h_x * (c_half / 8 +
                 (c_0 / 4) +
                 (h_t * p_half / 8) +
                 (h_t * p_0 / 4)) + \
          X_half * h_t / h_x

    M_0 = h_x * c_half / 8 - \
          X_half * h_t / h_x + \
          h_t * h_x * p_half / 8

    P_0 = h_x * (
        c_half * (y_0 + y_1) / 8 +
        c_0 * y_0 / 4 +
        h_t * (f_half + f_0) / 4
    ) + data.F_t(t) * h_t

    return K_0, M_0, P_0

def calc_right_condition(data, T_list, h_x, h_t, T_old_list):
    N = len(T_list)
    c_N = data.c_T(T_list[N - 1])
    c_N_minus_1 = data.c_T(T_list[N - 2])
    p_N = data.p_x(data.l)
    p_N_minus_1 = data.p_x(data.l - h_x)
    p_N_minus_half = (p_N + p_N_minus_1) / 2
    c_N_minus_half = (c_N + c_N_minus_1) / 2
    #X_N_minus_half = data.X_n_and_half(data.l, data.l - h_x)
    X_N_minus_half = data.X_n_and_half(T_list[N - 1], T_list[N - 2])
    y_N = T_old_list[N - 1]
    y_N_minus_1 = T_old_list[N - 2]
    f_N = data.f_x(data.l)
    f_N_minus_1 = data.f_x(data.l - h_x)

    K_N = h_t * (X_N_minus_half / h_x + data.alpha_N + h_x / 4 * p_N + h_x / 8 * p_N_minus_half) +\
          h_x * c_N / 4 + h_x * c_N_minus_half / 8

    M_N = - h_t * (X_N_minus_half / h_x - h_x * p_N_minus_half / 8) +\
          h_x * c_N_minus_half / 8

    P_N = data.alpha_N * data.T_0 * h_t +\
          h_t * h_x * (3 * f_N + f_N_minus_1) / 8 +\
        h_x * c_N * y_N / 4 +\
        h_x * c_N_minus_half * (y_N + y_N_minus_1) / 8


    return K_N, M_N, P_N


def get_T_list_for_cur_time(data, T_old_list, h_x, h_t, t):

    T_list = T_old_list
    max_dif = 1

    while (max_dif > data.eps):

        A_list, B_list, C_list, F_list = calc_coeff(data, T_list, h_x, h_t, T_old_list)

        K_0, M_0, P_0 = calc_left_condition(data, T_list, h_x, h_t, T_old_list, t)

        K_N, M_N, P_N = calc_right_condition(data, T_list, h_x, h_t, T_old_list)

        T_new_list = progonka(A_list, B_list, C_list, F_list, K_0, M_0, P_0, K_N, M_N, P_N)

        max_dif = get_max_dif_from_result(T_list, T_new_list)

        T_list = T_new_list

    return T_list


def solve_task(data, h_x, h_t):

    T_list_list = []

    #Разогретый стержень при параметрах: h_t = 1, h_x = 0.01, остальное все стандартно
    '''T_base_list = [1035.6424023264617, 1010.1952705075666, 985.6707863621957, 962.0339709106976, 939.2512256326762, 917.2902761251393,
     896.1201181177865, 875.7109657454167, 856.0342019816962, 837.062331142611, 818.7689333718313, 801.1286210239572,
     784.1169968651944, 767.7106140144376, 751.8869375510197, 736.624307718532, 721.9019046571229, 707.699714599572,
     693.9984974691861, 680.779755820216, 668.0257050640116, 655.7192449265623, 643.8439320853851, 632.3839539359441,
     621.3241034399099, 610.6497550096049, 600.3468413849259, 590.4018314609044, 580.8017090258479, 571.5339523717192,
     562.5865147400425, 553.9478055681988, 545.606672502465, 537.5523841455969, 529.7746135081203, 522.2634221338202,
     515.0092448711695, 508.00287526364974, 501.2354515330661, 494.698443131067, 488.3836378351318, 482.2831293663063,
     476.3893055069287, 470.69483669752054, 465.1926650928991, 459.87599405842144, 454.7382780880774, 449.7732131269307,
     444.974727281149, 440.3369718995738, 435.8543130114684, 431.5213231057256, 427.3327732374498, 423.2836254484165,
     419.3690254884915, 415.5842958256321, 411.92492893262147, 408.3865808391833, 404.96506493860704,
     401.65634603847025, 398.4565346454832, 395.36188147490304, 392.36877217536477, 389.4737222603609,
     386.6733722379721, 383.9644829308001, 381.3439309783943, 378.8087045147843, 376.35589901404046, 373.9827132970796,
     371.6864456932172, 369.46449035023585, 367.3143336870021, 365.23355098290955, 363.219803098665, 361.27083332316096,
     359.3844643413968, 357.5585953186176, 355.7911990960418, 354.080319493736, 352.4240687163833, 350.82062485786213,
     349.26822950072227, 347.7651854068064, 346.3098542954174, 344.90065470558, 343.53605993908667, 342.21459608115185,
     340.93484009562917, 339.6954179918696, 338.49500306041784, 337.33231417485695, 336.20611415722215,
     335.11520820450653, 334.0584423738844, 333.0347021243715, 332.0429109127346, 331.08202884155054,
     330.15105135739935, 329.24900799725674, 328.3749611812285, 327.528005049845, 326.70726434420357, 325.9118933273154,
     325.14107474507983, 324.3940188253701, 323.66996231377624, 322.96816754460787, 322.2879215458153,
     321.6285351765393, 320.9893422960524, 320.36969896290236, 319.76898266311525, 319.18659156636113,
     318.6219438090274, 318.0744768031875, 317.5436465704908, 317.0289271000388, 316.52980972934853, 316.0458025475392,
     315.5764298199119, 315.121231433124, 314.6797623601923, 314.25159214458495, 313.8363044026964, 313.4334963440215,
     313.04277830837395, 312.66377331952026, 312.2961166546214, 311.93945542890094, 311.59344819497903,
     311.2577645563327, 310.93208479436504, 310.61609950858485, 310.3095092694159, 310.0120242831757, 309.7233640687798,
     309.4432571457444, 309.1714407330761, 308.90766045865456, 308.65167007872645, 308.40323120714527,
     308.1621130540051, 307.9280921733285, 307.70095221948293, 307.4804837120106, 307.2664838085709, 307.0587560857031,
     306.85711032712925, 306.6613623193281, 306.4713336541201, 306.2868515380132, 306.1077486080681, 305.93386275405265,
     305.76503694665996, 305.60111907157676, 305.4419617691946, 305.2874222797633, 305.1373622937953, 304.9916478075363,
     304.8501489833218, 304.7127400146504, 304.5792989958059, 304.4497077958702, 304.3238519369724, 304.2016204766262,
     304.08290589401383, 303.9676039800768, 303.855613731283, 303.74683724694125, 303.6411796299405, 303.5385488907944,
     303.4388558548778, 303.3420140727436, 303.247939733415, 303.15655158054915, 303.06777083137376, 302.9815210983024,
     302.8977283131346, 302.8163206537542, 302.73722847323785, 302.6603842312946, 302.58572242795304, 302.5131795394235,
     302.44269395605704, 302.37420592233343, 302.3076574788071, 302.2429924059454, 302.1801561697952,
     302.11909586941505, 302.05976018601467, 302.00209933374276, 301.9460650120689, 301.8916103597045,
     301.8386899100124, 301.78725954785415, 301.73727646782737, 301.6886991338463, 301.6414872400212, 301.5956016727924,
     301.55100447427753, 301.50765880679216, 301.46552891850354, 301.424580110181, 301.3847787030063,
     301.34609200740783, 301.30848829288675, 301.2719367588001, 301.23640750607115, 301.2018715097949, 301.168300592711,
     301.13566739951335, 301.10394537197124, 301.0731087248334, 301.04313242249077, 301.01399215637247,
     300.985664323051, 300.9581260030343, 300.9313549402206, 300.90532952199675, 300.8800287599572, 300.8554322712243,
     300.8315202603505, 300.80827350178345, 300.78567332287565, 300.76370158742145, 300.74234067970366,
     300.7215734890344, 300.7013833947733, 300.6817542518083, 300.6626703764838, 300.6441165329626, 300.6260779200062,
     300.6085401581621, 300.5914892773433, 300.5749117047886, 300.55879425339083, 300.54312411038234,
     300.52788882636474, 300.51307630467414, 300.4986747910689, 300.48467286373165, 300.47105942357445,
     300.45782368483793, 300.44495516597505, 300.43244368081065, 300.420279329968, 300.4084524925539, 300.3969538180943,
     300.3857742187123, 300.37490486154184, 300.3643371613684, 300.3540627734907, 300.34407358679584,
     300.33436171704136, 300.3249195003384, 300.31573948682865, 300.30681443455, 300.29813730348434, 300.2897012497825,
     300.2814996201603, 300.2735259464605, 300.2657739403764, 300.2582374883305, 300.25091064650496, 300.243787636018,
     300.2368628382431, 300.2301307902652, 300.2235861804707, 300.2172238442668, 300.2110387599257, 300.2050260445515,
     300.1991809501636, 300.1934988598958, 300.1879752843048, 300.18260585778756, 300.17738633510186, 300.1723125879882,
     300.1673806018895, 300.16258647276635, 300.15792640400394, 300.15339670340836, 300.14899378028963,
     300.1447141426292, 300.1405543943288, 300.13651123253743, 300.1325814450571, 300.12876190782106,
     300.12504958244557, 300.121441513851, 300.11793482795116, 300.11452672940857, 300.11121449945387,
     300.10799549376713, 300.1048671404197, 300.10182693787385, 300.09887245304014, 300.0960013193891,
     300.0932112351167, 300.0904999613617, 300.08786532047327, 300.08530519432753, 300.0828175226912, 300.0804003016319,
     300.0780515819731, 300.07576946779153, 300.073552114958, 300.0713977297182, 300.06930456731385, 300.0672709306418,
     300.06529516895125, 300.0633756765767, 300.06151089170663, 300.0596992951861, 300.05793940935297,
     300.05622979690656, 300.054569059807, 300.0529558382063, 300.05138880940746, 300.0498666868539, 300.04838821914586,
     300.04695218908444, 300.0455574127416, 300.0442027385562, 300.04288704645467, 300.0416092469962, 300.0403682805408,
     300.03916311644093, 300.03799275225464, 300.036856212981, 300.03575255031575, 300.03468084192775,
     300.03364019075514, 300.03262972432066, 300.03164859406564, 300.03069597470244, 300.02977106358406,
     300.0288730800913, 300.0280012650362, 300.02715488008226, 300.02633320717996, 300.02553554801796,
     300.0247612234886, 300.02400957316854, 300.0232799548131, 300.02257174386455, 300.0218843329734, 300.0212171315329,
     300.0205695652258, 300.0199410755839, 300.019331119559, 300.0187391691053, 300.01816471077376, 300.0176072453168,
     300.0170662873039, 300.0165413647471, 300.01603201873763, 300.01553780309104, 300.0150582840028,
     300.01459303971257, 300.014141660178, 300.01370374675685, 300.01327891189794, 300.0128667788403, 300.0124669813203,
     300.0120791632867, 300.01170297862376, 300.01133809088043, 300.0109841730088, 300.01064090710776,
     300.01030798417463, 300.009985103863, 300.00967197424717, 300.00936831159265, 300.0090738401332, 300.0087882918539,
     300.00851140627907, 300.0082429302675, 300.0079826178114, 300.0077302298421, 300.00748553404, 300.00724830465066,
     300.0070183223047, 300.00679537384315, 300.0065792521472, 300.0063697559729, 300.0061666897898, 300.0059698636241,
     300.0057790929063, 300.0055941983224, 300.0054150056697, 300.0052413457157, 300.0050730540616, 300.0049099710086,
     300.00475194142865, 300.00459881463826, 300.0044504442755, 300.0043066881806, 300.00416740827967,
     300.00403247047166, 300.0039017445178, 300.00377510393514, 300.00365242589163, 300.00353359110505,
     300.00341848374404, 300.00330699133207, 300.00319900465416, 300.00309441766575, 300.00299312740395,
     300.0028950339017, 300.00280004010415, 300.0027080517867, 300.0026189774761, 300.0025327283727, 300.0024492182759,
     300.0023683635107, 300.00229008285714, 300.00221429748063, 300.00214093086475, 300.0020699087459,
     300.00200115904994, 300.00193461182965, 300.0018701992051, 300.0018078553044, 300.00174751620733,
     300.0016891198896, 300.00163260616876, 300.0015779166521, 300.0015249946852, 300.00147378530255, 300.0014242351794,
     300.00137629258455, 300.0013299073348, 300.0012850307508, 300.0012416156135, 300.00119961612234,
     300.00115898785435, 300.0011196877246, 300.0010816739474, 300.00104490599887, 300.00100934458044,
     300.0009749515833, 300.000941690054, 300.0009095241608, 300.00087841916127, 300.0008483413702, 300.0008192581292,
     300.0007911377763, 300.0007639496172, 300.0007376638968, 300.00071225177203, 300.0006876852842, 300.00066393733414,
     300.000640981656, 300.00061879279315, 300.0005973460744, 300.0005766175906, 300.00055658417205, 300.00053722336685,
     300.0005185134195, 300.00050043325, 300.00048296243426, 300.00046608118396, 300.000449770328, 300.0004340112942,
     300.000418786091, 300.0004040772902, 300.00038986801013, 300.00037614189944, 300.00036288312083, 300.0003500763356,
     300.00033770668904, 300.0003257597951, 300.0003142217228, 300.00030307898226, 300.00029231851136,
     300.00028192766274, 300.0002718941912, 300.0002622062413, 300.00025285233585, 300.00024382136394,
     300.00023510256983, 300.00022668554243, 300.00021856020425, 300.0002107168015, 300.00020314589403,
     300.00019583834546, 300.0001887853142, 300.0001819782439, 300.0001754088551, 300.00016906913623,
     300.00016295133565, 300.0001570479534, 300.0001513517333, 300.0001458556553, 300.00014055292854, 300.0001354369836,
     300.0001305014662, 300.00012574022986, 300.0001211473297, 300.0001167170161, 300.00011244372826, 300.0001083220887,
     300.0001043468973, 300.00010051312535, 300.0000968159108, 300.00009325055237, 300.00008981250465,
     300.0000864973732, 300.0000833009097, 300.0000802190071, 300.0000772476955, 300.0000743831376, 300.00007162162433,
     300.0000689595707, 300.00006639351204, 300.00006392009993, 300.0000615360986, 300.0000592383812, 300.0000570239263,
     300.0000548898144, 300.0000528332248, 300.0000508514325, 300.0000489418046, 300.0000471017977, 300.0000453289547,
     300.00004362090226, 300.0000419753481, 300.00004039007797, 300.0000388629534, 300.00003739190913,
     300.0000359749508, 300.00003461015234, 300.000033295654, 300.00003202966, 300.0000308104364, 300.0000296363091,
     300.00002850566193, 300.0000274169347, 300.00002636862126, 300.0000253592676, 300.0000243874705, 300.0000234518752,
     300.0000225511745, 300.0000216841067, 300.0000208494541, 300.0000200460416, 300.00001927273547, 300.00001852844144,
     300.000017812104, 300.0000171227045, 300.0000164592603, 300.0000158208234, 300.0000152064794, 300.000014615346,
     300.00001404657246, 300.00001349933785, 300.00001297285047, 300.00001246634713, 300.0000119790915,
     300.00001151037344, 300.00001105950827, 300.0000106258358, 300.00001020871946, 300.00000980754567,
     300.00000942172267, 300.0000090506799, 300.0000086938673, 300.00000835075497, 300.0000080208317, 300.000007703605,
     300.00000739860013, 300.0000071053596, 300.0000068234424, 300.00000655242366, 300.00000629189395,
     300.0000060414585, 300.0000058007373, 300.0000055693641, 300.00000534698586, 300.0000051332627, 300.000004927867,
     300.0000047304833, 300.00000454080754, 300.0000043585472, 300.0000041834201, 300.0000040151547, 300.0000038534894,
     300.0000036981723, 300.0000035489611, 300.00000340562207, 300.0000032679303, 300.0000031356694, 300.0000030086307,
     300.0000028866137, 300.0000027694251, 300.00000265687896, 300.00000254879615, 300.0000024450044,
     300.00000234533775, 300.00000224963657, 300.0000021577472, 300.0000020695217, 300.0000019848179, 300.0000019034989,
     300.0000018254329, 300.000001750493, 300.0000016785573, 300.00000160950844, 300.00000154323374, 300.00000147962436,
     300.00000141857595, 300.00000135998795, 300.0000013037637, 300.00000124981034, 300.0000011980384,
     300.0000011483618, 300.000001100698, 300.0000010549674, 300.00000101109356, 300.000000969003, 300.00000092862496,
     300.00000088989145, 300.0000008527372, 300.0000008170993, 300.00000078291754, 300.0000007501337,
     300.00000071869215, 300.00000068853933, 300.0000006596235, 300.0000006318954, 300.0000006053072,
     300.00000057981316, 300.0000005553693, 300.00000053193344, 300.0000005094651, 300.0000004879252, 300.0000004672762,
     300.0000004474822, 300.0000004285085, 300.00000041032195, 300.0000003928906, 300.0000003761841, 300.0000003601728,
     300.0000003448285, 300.00000033012407, 300.0000003160334, 300.0000003025315, 300.00000028959425,
     300.00000027719864, 300.00000026532257, 300.0000002539447, 300.00000024304455, 300.00000023260253,
     300.00000022259985, 300.0000002130185, 300.000000203841, 300.00000019505086, 300.000000186632, 300.00000017856917,
     300.00000017084756, 300.000000163453, 300.0000001563721, 300.0000001495917, 300.0000001430994, 300.0000001368833,
     300.00000013093165, 300.0000001252337, 300.00000011977886, 300.0000001145569, 300.0000001095581, 300.0000001047731,
     300.00000010019295, 300.0000000958091, 300.00000009161334, 300.00000008759775, 300.00000008375486,
     300.00000008007726, 300.000000076558, 300.00000007319045, 300.00000006996817, 300.000000066885, 300.00000006393503,
     300.0000000611127, 300.00000005841247, 300.00000005582933, 300.00000005335824, 300.0000000509946,
     300.0000000487336, 300.000000046571, 300.00000004450254, 300.0000000425243, 300.00000004063236, 300.0000000388231,
     300.0000000370929, 300.00000003543823, 300.0000000338561, 300.0000000323433, 300.0000000308968, 300.0000000295139,
     300.0000000281917, 300.00000002692775, 300.0000000257194, 300.00000002456426, 300.00000002346013,
     300.0000000224048, 300.00000002139603, 300.0000000204319, 300.0000000195105, 300.00000001863, 300.00000001778847,
     300.00000001698436, 300.0000000162159, 300.0000000154816, 300.00000001477997, 300.0000000141097, 300.0000000134693,
     300.00000001285747, 300.00000001227295, 300.0000000117146, 300.0000000111811, 300.00000001067144,
     300.0000000101846, 300.00000000971954, 300.0000000092753, 300.000000008851, 300.00000000844574, 300.00000000805875,
     300.00000000768915, 300.00000000733615, 300.0000000069991, 300.0000000066773, 300.00000000636993,
     300.0000000060766, 300.0000000057966, 300.0000000055293, 300.00000000527405, 300.0000000050304, 300.00000000479787,
     300.0000000045759, 300.00000000436404, 300.0000000041618, 300.0000000039688, 300.0000000037846, 300.00000000360876,
     300.00000000344096, 300.00000000328083, 300.00000000312804, 300.00000000298223, 300.0000000028432,
     300.00000000271046, 300.00000000258393, 300.00000000246314, 300.0000000023479, 300.000000002238,
     300.00000000213305, 300.00000000203295, 300.0000000019374, 300.00000000184616, 300.00000000175913,
     300.00000000167626, 300.0000000015972, 300.0000000015218, 300.0000000014499, 300.0000000013814, 300.0000000013161,
     300.00000000125374, 300.0000000011944, 300.0000000011378, 300.0000000010839, 300.0000000010325, 300.0000000009835,
     300.0000000009367, 300.00000000089204, 300.00000000084947, 300.0000000008088, 300.0000000007701,
     300.00000000073334, 300.0000000006983, 300.000000000665, 300.0000000006332, 300.00000000060277, 300.0000000005739,
     300.0000000005462, 300.0000000005199, 300.0000000004948, 300.0000000004709, 300.0000000004481, 300.0000000004264,
     300.00000000040575, 300.0000000003861, 300.00000000036744, 300.00000000034953, 300.0000000003324,
     300.0000000003161, 300.00000000030064, 300.0000000002859, 300.0000000002719, 300.0000000002586, 300.0000000002459,
     300.0000000002339, 300.0000000002225, 300.00000000021157, 300.00000000020117, 300.0000000001913, 300.0000000001819,
     300.0000000001729, 300.00000000016445, 300.0000000001563, 300.0000000001486, 300.00000000014126, 300.0000000001342,
     300.0000000001275, 300.0000000001211, 300.00000000011505, 300.00000000010925, 300.0000000001037, 300.0000000000984,
     300.0000000000934, 300.0000000000886, 300.000000000084, 300.0000000000796, 300.0000000000753, 300.00000000007134,
     300.00000000006753, 300.00000000006395, 300.0000000000605, 300.0000000000572, 300.00000000005406, 300.000000000051,
     300.0000000000481, 300.0000000000453, 300.00000000004263, 300.00000000004013, 300.00000000003786,
     300.00000000003564, 300.0000000000334, 300.0000000000312, 300.0000000000291, 300.0000000000271, 300.00000000002535,
     300.00000000002376, 300.00000000002217, 300.0000000000206, 300.00000000001904, 300.00000000001756,
     300.00000000001626, 300.00000000001495, 300.0000000000137, 300.0000000000127, 300.0000000000117,
     300.00000000001074, 300.0000000000097, 300.00000000000875, 300.00000000000784, 300.00000000000693,
     300.0000000000061, 300.0000000000053, 300.00000000000455, 300.0000000000038, 300.0000000000031, 300.00000000000256,
     300.00000000000205, 300.0000000000016, 300.00000000000114, 300.00000000000074, 300.0000000000003,
     299.99999999999994, 299.99999999999955, 299.9999999999991, 299.99999999999875, 299.99999999999847,
     299.9999999999982, 299.999999999998, 299.99999999999784, 299.9999999999977, 299.9999999999976, 299.9999999999975,
     299.9999999999974, 299.99999999999727, 299.99999999999716, 299.99999999999716, 299.99999999999716,
     299.99999999999716, 299.99999999999716, 299.99999999999716, 299.99999999999716, 299.99999999999727,
     299.9999999999974, 299.9999999999975, 299.99999999999756, 299.9999999999976, 299.9999999999976, 299.9999999999976,
     299.9999999999976, 299.99999999999756, 299.99999999999756, 299.9999999999975, 299.9999999999975,
     299.99999999999756, 299.99999999999756, 299.9999999999975, 299.99999999999744, 299.9999999999974,
     299.9999999999972, 299.99999999999704, 299.9999999999968, 299.9999999999966, 299.99999999999636, 299.999999999996,
     299.99999999999574, 299.9999999999955, 299.9999999999953, 299.99999999999505, 299.9999999999949,
     299.99999999999477, 299.9999999999946, 299.9999999999945, 299.9999999999944, 299.9999999999943, 299.99999999999426,
     299.9999999999942, 299.9999999999942, 299.99999999999415, 299.9999999999941, 299.99999999999403, 299.9999999999941,
     299.9999999999942, 299.99999999999426, 299.9999999999943, 299.99999999999443, 299.9999999999946, 299.9999999999949,
     299.9999999999952, 299.9999999999955, 299.9999999999958, 299.99999999999613, 299.9999999999965, 299.9999999999967,
     299.99999999999704, 299.9999999999974, 299.9999999999977, 299.99999999999807, 299.9999999999984, 299.9999999999988,
     299.9999999999991, 299.99999999999943, 299.9999999999997, 300.0000000000001, 300.00000000000045,
     300.00000000000085, 300.0000000000014, 300.0000000000019, 300.0000000000024, 300.0000000000029, 300.00000000000335,
     300.0000000000038, 300.00000000000426, 300.00000000000466, 300.00000000000495, 300.00000000000534,
     300.0000000000056, 300.00000000000597, 300.00000000000625, 300.00000000000654, 300.00000000000676,
     300.00000000000693, 300.00000000000705, 300.00000000000716, 300.0000000000072, 300.0000000000073,
     300.0000000000074, 300.0000000000075, 300.0000000000077, 300.0000000000079, 300.0000000000081, 300.0000000000082,
     300.00000000000836, 300.0000000000086, 300.0000000000088, 300.00000000000904, 300.0000000000093,
     300.00000000000955, 300.00000000000983, 300.00000000001006, 300.0000000000103, 300.00000000001046,
     300.0000000000107, 300.00000000001086, 300.0000000000111, 300.00000000001125, 300.0000000000115, 300.0000000000117,
     300.0000000000118, 300.00000000001194, 300.00000000001194, 300.0000000000119, 300.0000000000119, 300.0000000000119,
     300.0000000000118]
    '''

    T_base_list = [data.T_0 for i in np.arange(0, data.l, h_x)]

    max_dif = 1

    T_list_list.append(T_base_list)

    #цикл по времени
    t = 0
    while (max_dif > data.eps):
        T_new_list = get_T_list_for_cur_time(data, T_base_list, h_x, h_t, t)
        T_list_list.append(T_new_list)

        max_dif = get_max_dif_from_result(T_base_list, T_new_list)

        T_base_list = T_new_list
        t += h_t
        if (t > 10):
            break

    return T_list_list